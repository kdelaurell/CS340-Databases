var express = require('express');
var app = express();
var handlebars = require('express-handlebars').create({defaultLayout:'main'});
var bodyParser = require('body-parser');
var mySQL = require('mysql');
var path = require('path');
var pool = mySQL.createPool({
  host  : 'localhost',
  user  : 'student',
  password: 'default',
  database: 'student'
})

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.engine('handlebars', handlebars.engine);
app.set('view engine', 'handlebars');
app.set('port', 3000);
app.use(express.static('public'));
app.use(express.static(path.join(__dirname, 'public')));



app.get('/insertTeams', function(req, res, next){
  var context = {};
  var post  = {TeamName: "Ducks", City: "Anaheim", State: "CA", Country: "U.S.A."};
  pool.query("INSERT INTO teams SET ?", post, function(err, result){
    if(err){
      next(err);
      return;
    }
    pool.query('SELECT * FROM teams', function(err, rows, fields){
      if(err){
        next(err);
        return;
      }
      context.results = rows;
      res.render('Teams', context);
    });
    });
});

app.get('/insertPlayers', function(req, res, next){
  var context = {};
  var post  = {FirstName: "Ryan", LastName: "Getzlaf", Num: 15, Position: "C", Height: "6'3", Weight: 221, Age: 31, GP: 77, Goals: 13, Assists: 50, TeamId: 1};
  pool.query("INSERT INTO players SET ?", post, function(err, result){
    if(err){
      next(err);
      return;
    }
    pool.query('SELECT * FROM players', function(err, rows, fields){
      if(err){
        next(err);
        return;
      }
      context.results = rows;
      res.render('Players', context);
    });
    });
});

app.get('/reset-teams',function(req,res,next){
  var context = {};
    pool.query("DROP TABLE IF EXISTS teams", function(err){
    var createString = "CREATE TABLE teams("+
    "TeamId INT AUTO_INCREMENT,"+
    "TeamName VARCHAR(255) NOT NULL,"+
    "City VARCHAR(255) NOT NULL,"+
    "State VARCHAR(255) NOT NULL,"+
    "Country VARCHAR(255) NOT NULL,"+
    "DivisionId INT NOT NULL,"+
    "PRIMARY KEY(TeamId),"+
    "FOREIGN KEY(DivisionId) REFERENCES divisions(DivisionId),"+
    ")";

    //"FormerPlayers INT FOREIGN KEY)";
    pool.query(createString, function(err){
      if(err){
        console.log(err);
        next(err);
        return;
      }
      res.render('Teams', context);
    })
  });

app.get('/reset-divisions',function(req,res,next){
  var context = {};
    pool.query("DROP TABLE IF EXISTS divisions", function(err){
    var createString = "CREATE TABLE divisions("+
    "DivisionId INT PRIMARY KEY AUTO_INCREMENT,"+
    "TeamName VARCHAR(255) NOT NULL,"+
    "City VARCHAR(255) NOT NULL,"+
    "State VARCHAR(255) NOT NULL,"+
    "Country VARCHAR(255) NOT NULL"+
    ")";

    //"FormerPlayers INT FOREIGN KEY)";
    pool.query(createString, function(err){
      if(err){
        console.log(err);
        next(err);
        return;
      }
      res.render('Divisions', context);
    })
  });
});

app.get('/reset-players',function(req,res,next){
  var context = {};
    pool.query("DROP TABLE IF EXISTS players", function(err){
    var createString = "CREATE TABLE players("+
    "PlayerId INT PRIMARY KEY AUTO_INCREMENT,"+
    "FirstName VARCHAR(255) NOT NULL,"+
    "LastName VARCHAR(255) NOT NULL,"+
    "Num INT,"+
    "Position VARCHAR(255),"+
    "Height VARCHAR(255) NOT NULL"+
    "Weight INT,"+
    "Age INT,"
    "GP INT,"+
    "Goals INT,"+
    "Assists INT,"+
    "POINTS AS Goals + Assists,"+
    "TeamId INT NOT NULL)ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;";;
    pool.query(createString, function(err){
      res.render('Players', context);
    })
  });
});

app.get('/displayTable',function(req,res,next){
  var context = {};
  pool.query('SELECT * FROM workouts', function(err, rows, fields){
    if(err){
      next(err);
      return;
    }
    context.results = JSON.stringify(rows);
    console.log(rows[0].date);
    res.type('json');
    res.render('home', context.results);
  });
});

app.get('/FinalProject',function(req,res,next){
  var context = {};
  pool.query('SELECT * FROM workouts', function(err, rows, fields){
    if(err){
      next(err);
      return;
    }
    context.results = rows;
    res.render('home',context);
  });
});


app.use(function(req,res){
  res.status(404);
  res.render('404');
});

app.use(function(err, req, res, next){
  console.error(err.stack);
  res.type('plain/text');
  res.status(500);
  res.render('500');
});


app.listen(app.get('port'), function(){
  console.log('Express started on http://localhost:' + app.get('port') + '; press Ctrl-C to terminate.');
});
